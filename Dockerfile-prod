# ---------- STAGE 1: Build ----------
FROM node:24-alpine@sha256:f36fed0b2129a8492535e2853c64fbdbd2d29dc1219ee3217023ca48aebd3787 AS builder

ENV NODE_ENV production

RUN apk update && apk upgrade && apk add bash

SHELL ["/bin/bash", "-c"]

WORKDIR /app

COPY \
  package.json ./ \
  pnpm-lock.yaml ./ \
  tsconfig.json ./ \
  tsconfig.build.json ./ \
  .env ./ \
  topic.json ./ \
  swagger-description*.md ./ \
  nest-cli.json ./

RUN npm install --global pnpm \
    && SHELL=bash pnpm setup \
    && source /root/.bashrc

ENV PNPM_HOME=/usr/local/bin

COPY src /app/src

RUN pnpm install --frozen-lockfile --prod && pnpm build

# ---------- STAGE 2: Runtime ----------
FROM node:24-slim@sha256:0f2d677a7152ee7ac390837bd4fc36aca12f595411df5d4209f972660e34a7b6 AS runtime

# Nur das Nötigste
WORKDIR /app

# Nur Runtime-Abhängigkeiten
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/topic.json ./
COPY --from=builder /app/swagger-description*.md ./
COPY --from=builder /app/.env ./

ARG APP_UID=1001
ARG APP_GID=1001

RUN addgroup -g ${APP_GID} appgroup || echo "Group already exists" && \
    adduser -u ${APP_UID} -G appgroup -s /bin/sh -D appuser || echo "User already exists"

USER ${APP_UID}

# Start der App
CMD ["node", "dist/main.js"]
